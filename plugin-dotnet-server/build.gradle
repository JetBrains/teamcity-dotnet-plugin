/*
 * Copyright 2000-2022 JetBrains s.r.o.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'com.github.rodm.teamcity-server' version "1.3.2"
}

teamcity {
  version = teamcityVersion
  server {
    descriptor = project.file('teamcity-plugin.xml')
    tokens = [Plugin_Version: project.version]
    files {
      into('kotlin-dsl') {
        from("${rootProject.projectDir}/kotlin-dsl")
      }
      into('server/bundled-tool') {
        from('bundled-tool')
      }
    }
  }
}

dependencies {
  implementation project(':plugin-dotnet-common')
  implementation 'com.google.code.gson:gson:2.5'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.10"
  implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.0'
  provided files("${teamcityDir}/webapps/ROOT/WEB-INF/lib/server-tools.jar")
  provided 'org.jetbrains.teamcity:server-api:${teamcityVersion}'
  testImplementation 'org.testng:testng:7.1.0'
  testImplementation 'io.mockk:mockk:1.9.3'
  testImplementation 'org.jetbrains.kotlin:kotlin-reflect'
  testImplementation  'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
  agent project(path: ':plugin-dotnet-agent', configuration: 'plugin')
}

class PreparePackagesTask extends DefaultTask {
  @TaskAction
  def run() {
    ant.delete(dir: './bundled-tool')
    ant.mkdir(dir: './bundled-tool')

    def toolsPackageVersion = '2021.1.2'
    def toolsPackageId = 'JetBrains.ReSharper.CommandLineTools/' + toolsPackageVersion

    println 'Processing ' + toolsPackageId
    ant.delete(dir: './packages')
    ant.mkdir(dir: './packages')
    ant.mkdir(dir: './packages/pack')
    ant.get(src: 'https://www.nuget.org/api/v2/package/' + toolsPackageId, dest: './packages/package.zip', skipexisting: 'true')
    ant.unzip(src: './packages/package.zip', dest: './packages')
    ant.move(todir: './packages/pack', overwrite: 'true', force: 'true') {
      fileset(dir: './packages') {
        include(name: 'tools/**/*.*')
      }
    }

    ant.copy(todir: './packages', overwrite: 'true', force: 'true'){
      fileset(file: './bundled-tool.xml')
    }
    ant.move(file: './packages/bundled-tool.xml', tofile: './packages/pack/teamcity-plugin.xml', overwrite: 'true', force: 'true')

    ant.zip(destfile: './bundled-tool/jetbrains.resharper-clt.bundled.zip') {
      fileset(dir: './packages/pack') {
        include(name: '**/*.*')
      }
    }
    ant.move(file: './packages/JetBrains.ReSharper.CommandLineTools.nuspec', todir: './bundled-tool', overwrite: 'true', force: 'true')
    ant.copy(todir: './bundled-tool', overwrite: 'true', force: 'true'){
      fileset(file: './bundled-tool.xml')
    }

    ant.delete(dir: './packages')
  }
}

task preparePackagesTask(type: PreparePackagesTask)

serverPlugin.dependsOn(preparePackagesTask)

serverPlugin.version = null
serverPlugin.baseName = projectIds.artifact

sourceCompatibility = 1.8
targetCompatibility = 1.8