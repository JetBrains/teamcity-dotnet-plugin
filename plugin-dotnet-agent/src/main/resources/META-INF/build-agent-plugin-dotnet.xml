<?xml version="1.0" encoding="UTF-8"?>


<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
       default-autowire="constructor">

  <import resource="classpath*:META-INF/build-common-plugin-dotnet.xml"/>

  <bean class="jetbrains.buildServer.agent.BeanConfig"/>

  <!-- common agent services -->
  <bean class="jetbrains.buildServer.agent.PropertiesExtension"/>
  <bean class="jetbrains.buildServer.agent.EventObservers"/>
  <bean class="jetbrains.buildServer.agent.EventSourcesImpl"/>
  <bean class="jetbrains.buildServer.agent.EnvironmentImpl"/>
  <bean class="jetbrains.buildServer.agent.FileSystemServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.AntPathMatcher"/>
  <bean class="jetbrains.buildServer.agent.ToolSearchServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.ArgumentsServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.WildcardPathResolver"/>
  <bean class="jetbrains.buildServer.agent.CommandLineExecutorImpl"/>
  <bean class="jetbrains.buildServer.agent.CommandLinePresentationServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.WindowsRegistryParserImpl"/>
  <bean class="jetbrains.buildServer.agent.WindowsRegistryImpl"/>
  <bean class="jetbrains.buildServer.agent.PEReaderImpl"/>

  <!-- common agent's runner services -->
  <bean class="jetbrains.buildServer.agent.runner.BuildInfoImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.CannotExecuteImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.BasePathResolverWorkflowComposer" id="basePathResolverWorkflowComposer"/>
  <bean class="jetbrains.buildServer.agent.runner.UnixPathResolverWorkflowComposer" id="unixPathResolverWorkflowComposer">
    <constructor-arg ref="basePathResolverWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.WindowsPathResolverWorkflowComposer" id="windowsPathResolverWorkflowComposer">
    <constructor-arg ref="basePathResolverWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.ServiceMessageSourceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.DefaultColorTheme"/>
  <bean class="jetbrains.buildServer.agent.runner.ParametersServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.PathsServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.LoggerServiceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.BuildOptionsImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.MessagePositionsSource" id="messagePositionsSource"/>
  <bean class="jetbrains.buildServer.agent.runner.MessageIndicesSource" id="messageIndicesSource">
    <constructor-arg ref="messagePositionsSource"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.ServiceMessagesSource" id="serviceMessagesSource">
    <constructor-arg ref="messageIndicesSource"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.MessagesGuard" scope="prototype" id="messageGuardOutputReplacer">
    <constructor-arg ref="serviceMessagesSource"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.CommandExecutionAdapter" scope="prototype"/>
  <bean class="jetbrains.buildServer.agent.runner.ProgramCommandLineAdapter" scope="prototype"/>
  <bean class="jetbrains.buildServer.agent.runner.LayeredWorkflowComposer" id="layeredWorkflowComposer"/>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowSessionImpl" scope="prototype">
    <constructor-arg ref="layeredWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowSessionEventManager"/>
  <bean class="jetbrains.buildServer.agent.runner.VirtualContextImpl" scope="prototype"/>
  <bean class="jetbrains.buildServer.agent.runner.CacheCleanerSessionImpl"/>

  <!-- dotnet -->
  <bean class="jetbrains.buildServer.dotnet.commands.responseFile.ResponseFileFactoryImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileProviderFromSystemSettings" id="testRunSettingsFileProviderFromSystemSettings"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileProviderFromParams" id="testRunSettingsFileProviderFromParams"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileProviderFromTestArgs" id="testRunSettingsFileProviderFromTestArgs"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileProviderFromKeyValueArgs" id="testRunSettingsFileProviderFromVSTestArgs">
    <constructor-arg>
      <list>
        <value>\/settings</value>
        <value>--settings</value>
      </list>
    </constructor-arg>
    <constructor-arg>
      <list>
        <value type="jetbrains.buildServer.dotnet.DotnetCommandType">VSTest</value>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileProviderFromKeyValueArgs" id="testRunSettingsFileProviderFromPropertiesArgs">
    <constructor-arg>
      <list>
        <value>\/property:VSTestSetting=</value>
        <value>\/p:VSTestSetting=</value>
        <value>-property:VSTestSetting=</value>
        <value>-p:VSTestSetting=</value>
      </list>
    </constructor-arg>
    <constructor-arg>
      <list>
        <value type="jetbrains.buildServer.dotnet.DotnetCommandType">VSTest</value>
        <value type="jetbrains.buildServer.dotnet.DotnetCommandType">Test</value>
        <value type="jetbrains.buildServer.dotnet.DotnetCommandType">MSBuild</value>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsExisting" id="testRunSettingsExisting">
    <constructor-arg>
      <list>
        <ref bean="testRunSettingsFileProviderFromVSTestArgs"/>
        <ref bean="testRunSettingsFileProviderFromTestArgs"/>
        <ref bean="testRunSettingsFileProviderFromParams"/>
        <ref bean="testRunSettingsFileProviderFromSystemSettings"/>
        <ref bean="testRunSettingsFileProviderFromPropertiesArgs"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsForFilter" id="testRunSettingsForFilter">
    <constructor-arg ref="testRunSettingsExisting"/>
    <constructor-arg ref="composedTestsFilterProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.test.runSettings.TestRunSettingsFileNameProviderGenerated" id="testRunSettingsFileNameProviderGenerated">
    <constructor-arg ref="testRunSettingsForFilter"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetFilterFactoryImpl">
    <constructor-arg ref="testRunSettingsFileNameProviderGenerated"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="stdDeepDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="http-cache in user directory"/>
    <constructor-arg type="String" name="command" value="http-cache"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Deep"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="stdEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="stdMediumDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="global-packages in user directory"/>
    <constructor-arg type="String" name="command" value="global-packages"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Medium"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="stdEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="stdLightDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="temp-cache in user directory"/>
    <constructor-arg type="String" name="command" value="temp"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Light"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="stdEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="teamcityDeepDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="http-cache in 'system/dotnet/.http' directory"/>
    <constructor-arg type="String" name="command" value="http-cache"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Deep"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="teamcityEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="teamcityMediumDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="global-packages in 'system/dotnet/.net' directory"/>
    <constructor-arg type="String" name="command" value="global-packages"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Medium"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="teamcityEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.DotnetNugetCacheCleaner" id="teamcityLightDotnetNugetCacheCleaner">
    <constructor-arg type="String" name="name" value="temp-cache in 'temp/buildTmp' directory"/>
    <constructor-arg type="String" name="command" value="temp"/>
    <constructor-arg type="jetbrains.buildServer.agent.runner.CleanType" name="type" value="Light"/>
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="teamcityEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.VersionEnumeratorImpl"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetSdk.DotnetSdksProviderImpl"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetRuntime.DotnetRuntimesProviderImpl">
    <constructor-arg ref="dotnetToolProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetVersionProviderImpl">
    <constructor-arg ref="dotnetVersionParser"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.BuildServerShutdownMonitor"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.TestReportingParametersImpl"/>
  <bean class="jetbrains.buildServer.dotnet.FailedTestSourceImpl"/>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="dotnet">
    <constructor-arg value="dotnet"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="dotcover">
    <constructor-arg value="dotcover"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetToolEnvironment" id="dotnetToolEnvironment"/>
  <bean class="jetbrains.buildServer.dotnet.DotnetToolProvider" id="dotnetToolProvider">
    <constructor-arg ref="dotnetToolEnvironment"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetVersionParser" id="dotnetVersionParser"/>
  <bean class="jetbrains.buildServer.dotnet.DotnetStateWorkflowComposer" id="dotnetStateWorkflowComposer">
    <constructor-arg ref="dotnetVersionParser"/>
    <constructor-arg>
      <list>
        <ref bean="unixPathResolverWorkflowComposer"/>
        <ref bean="windowsPathResolverWorkflowComposer"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.SimpleStateWorkflowComposer" id="simpleStateWorkflowComposer">
    <constructor-arg>
      <list>
        <ref bean="unixPathResolverWorkflowComposer"/>
        <ref bean="windowsPathResolverWorkflowComposer"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetWorkflowComposer" id="dotnetWorkflowComposer">
    <constructor-arg ref="rootDotnetCommandStreamTransformer"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentImpl" primary="true"/>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentPredefined" id="stdPathsNugetEnvironment">
    <constructor-arg name="allowInternalCaches" type="boolean" value="false"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentPredefined" id="teamCityNugetEnvironment">
    <constructor-arg name="allowInternalCaches" type="boolean" value="true"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentVariables" id="nugetEnvironmentVariables"/>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentVariables" id="stdNugetEnvironmentVariables">
    <constructor-arg ref="stdPathsNugetEnvironment"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetEnvironmentVariables" id="teamcityNugetEnvironmentVariables">
    <constructor-arg ref="teamCityNugetEnvironment"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetEnvironmentVariables" primary="true">
    <constructor-arg>
      <list>
        <ref bean="nugetEnvironmentVariables"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetEnvironmentVariables" id="stdEnvironmentVariables">
    <constructor-arg>
      <list>
        <ref bean="stdNugetEnvironmentVariables"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetEnvironmentVariables" id="teamcityEnvironmentVariables">
    <constructor-arg>
      <list>
        <ref bean="teamcityNugetEnvironmentVariables"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetCredentialProviderSelectorImpl"/>
  <bean class="jetbrains.buildServer.dotnet.logging.LoggerResolverImpl"/>
  <bean class="jetbrains.buildServer.dotnet.DotnetWorkflowAnalyzerImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.nuget.NugetResultsObserver" id="nugetResultsObserver"/>
  <bean class="jetbrains.buildServer.dotnet.commands.msbuild.MSBuildParameterConverterImpl"/>
  <bean class="jetbrains.buildServer.dotnet.FileBasedDotnetWorkloadProvider" id="fileBasedDotnetWorkloadProvider"/>
  <bean class="jetbrains.buildServer.dotnet.RegistryBasedDotnetWorkloadProvider" id="registryBasedDotnetWorkloadProvider"/>
  <bean class="jetbrains.buildServer.dotnet.RestorePackagesPathManager" id="restorePackagesPathManager"/>
  <bean class="jetbrains.buildServer.dotnet.DotnetRunnerCacheDirectoryProvider" id="dotnetRunnerCacheDirectoryProvider"/>

  <!--Dotnet agent properties providers-->
  <bean class="jetbrains.buildServer.dotnet.discovery.DotnetRuntimeAgentPropertiesProvider" id="dotnetRuntimeAgentPropertiesProvider"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.DotnetSdkAgentPropertiesProvider" id="dotnetSdkAgentPropertiesProvider">
    <constructor-arg ref="dotnetToolProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.MSBuildRegistryAgentPropertiesProvider" id="msBuildRegistryAgentPropertiesProvider"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.MSBuildFileSystemAgentPropertiesProvider" id="msBuildFileSystemAgentPropertiesProvider">
    <constructor-arg>
      <list>
        <ref bean="visualStudioFileSystemProvider"/>
        <ref bean="visualStudioRegistryProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.DotnetFrameworkRegistryAgentPropertiesProvider" id="dotnetFrameworkRegistryAgentPropertiesProvider"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.TargetingPackFileSystemAgentPropertiesProvider" id="targetingPackFileSystemAgentPropertiesProvider"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.TargetingPackAgentPropertiesProvider" id="targetingPackAgentPropertiesProvider"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioAgentPropertiesProvider" id="visualStudioAgentPropertiesProvider">
    <constructor-arg>
      <list>
        <ref bean="visualStudioFileSystemProvider"/>
        <ref bean="visualStudioRegistryProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.DotnetFrameworkSdkAgentPropertiesProvider" id="dotnetFrameworkSdkAgentPropertiesProvider">
    <constructor-arg>
      <list>
        <ref bean="sdkRegistryProvider"/>
        <ref bean="dotnetFrameworkSdkRegistryProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.WindowsSdkAgentPropertiesProvider" id="windowsSdkAgentPropertiesProvider">
    <constructor-arg ref="sdkRegistryProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.VisualStudioTestAgentPropertiesProvider" id="visualStudioTestAgentPropertiesProvider">
    <constructor-arg ref="visualStudioTestProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.MSTestAgentPropertiesProvider" id="msTestAgentPropertiesProvider">
    <constructor-arg ref="visualStudioTestProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.DotnetWorkloadAgentPropertiesProvider" id="dotnetWorkloadAgentPropertiesProvider">
    <constructor-arg ref="dotnetToolProvider"/>
    <constructor-arg ref="fileBasedDotnetWorkloadProvider"/>
    <constructor-arg ref="registryBasedDotnetWorkloadProvider"/>
  </bean>

  <bean class="jetbrains.buildServer.visualStudio.JsonVisualStudioInstanceParser"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioPackagesRegistryLocator" id="visualStudioPackagesRegistryLocator"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioPackagesEnvironmentLocator" id="visualStudioPackagesEnvironmentLocator"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioFileSystemProvider" id="visualStudioFileSystemProvider">
    <constructor-arg>
      <list>
        <ref bean="visualStudioPackagesRegistryLocator"/>
        <ref bean="visualStudioPackagesEnvironmentLocator"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioRegistryProvider" id="visualStudioRegistryProvider">
    <constructor-arg ref="visualStudioInstanceFactory"/>
    <constructor-arg ref="visualStudioTestConsoleInstanceFactory"/>
    <constructor-arg ref="msTestConsoleInstanceFactory"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.msbuild.MSBuildValidatorImpl"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetFrameworkValidatorImpl"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetFrameworksEnvironmentImpl"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetPolicyRegistryVisitor" scope="prototype" id="dotnetPolicyRegistryVisitor"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetSetupRegistryVisitor" scope="prototype" id="dotnetSetupRegistryVisitor"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetFrameworksProviderImpl"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioInstanceFactory" id="visualStudioInstanceFactory"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetFrameworkSdkRegistryProvider" id="dotnetFrameworkSdkRegistryProvider">
    <constructor-arg ref="dotnetFrameworkSdkInstanceFactory"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.SdkRegistryProvider" id="sdkRegistryProvider">
    <constructor-arg ref="dotnetFrameworkSdkInstanceFactory"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.discovery.dotnetFramework.DotnetFrameworkSdkInstanceFactory" id="dotnetFrameworkSdkInstanceFactory"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.vstest.VisualStudioTestConsoleInstanceFactory" id="visualStudioTestConsoleInstanceFactory"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.mstest.MSTestConsoleInstanceFactory" id="msTestConsoleInstanceFactory"/>
  <bean class="jetbrains.buildServer.dotnet.discovery.vstest.VisualStudioTestProvider" id="visualStudioTestProvider">
    <constructor-arg>
      <list>
        <ref bean="visualStudioFileSystemProvider"/>
        <ref bean="visualStudioRegistryProvider"/>
      </list>
    </constructor-arg>
    <constructor-arg ref="visualStudioTestConsoleInstanceFactory"/>
    <constructor-arg ref="msTestConsoleInstanceFactory"/>
  </bean>

  <!--Dotnet arguments' providers-->
  <bean class="jetbrains.buildServer.dotnet.commands.targeting.TargetsParserImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.vstest.VSTestLoggerEnvironmentCleaner"/>
  <bean class="jetbrains.buildServer.dotnet.commands.vstest.VSTestLoggerEnvironmentAnalyzerImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.TestCommandEnvironmentBuilder" id="testCommandEnvironmentBuilder"/>
  <bean class="jetbrains.buildServer.dotnet.commands.vstest.VSTestLoggerEnvironmentBuilder" id="vsTestLoggerEnvironmentBuilder"/>
  <bean class="jetbrains.buildServer.dotnet.DotnetCommandResolverImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.test.TestMethodNameFilterTestSplittingCommandTransformer"
        id="testNameTestsSplittingCommandsTransformer">
    <constructor-arg ref="dotnetListTestCommand"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.test.TestClassNameFilterTestSplittingCommandTransformer"
        id="testClassTestsSplittingCommandsTransformer"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.test.TestSuppressTestsSplittingCommandTransformer"
        id="testSuppressTestsSplittingCommandsTransformer">
    <constructor-arg ref="dotnetBuildCommand"/>
    <constructor-arg ref="teamCityDotnetToolCommand"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.MultiTargetDotnetCommandTransformer" id="multiTargetDotnetCommandsTransformer"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.ComposedDotnetCommandTransformer" id="composedDotnetCommandsTransformer"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.test.TestRetryCommandsTransformer" id="testRetryCommandsTransformer"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.test.RootTestsSplittingCommandsTransformer" id="rootTestsSplittingCommandsTransformer">
    <constructor-arg>
      <list>
        <ref bean="testNameTestsSplittingCommandsTransformer"/>
        <ref bean="testClassTestsSplittingCommandsTransformer"/>
        <ref bean="testSuppressTestsSplittingCommandsTransformer"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.RootDotnetCommandTransformer" id="rootDotnetCommandStreamTransformer">
    <constructor-arg>
      <list>
        <ref bean="multiTargetDotnetCommandsTransformer"/>
        <ref bean="rootTestsSplittingCommandsTransformer"/>
        <ref bean="testRetryCommandsTransformer"/>
        <ref bean="composedDotnetCommandsTransformer"/>
        <ref bean="dotnetDepCacheRestorationCommandTransformer"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.targeting.TargetServiceImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.targeting.TargetArgumentsProviderByType"/>
  <bean class="jetbrains.buildServer.dotnet.SystemParametersProvider" id="systemParametersProvider"/>
  <bean class="jetbrains.buildServer.dotnet.CustomArgumentsProvider" id="dotnetCustomArgumentsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.RestorePackagesPathArgumentsProvider" id="restorePackagesPathArgumentsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.toolResolvers.DotnetToolResolverImpl" id="dotnetToolResolver">
    <constructor-arg ref="dotnetToolEnvironment"/>
    <constructor-arg ref="dotnetStateWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.toolResolvers.MSBuildToolResolver" id="msbuildToolResolver">
    <constructor-arg ref="dotnetToolResolver"/>
    <constructor-arg ref="simpleStateWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.toolResolvers.VSTestToolResolver" id="vstestToolResolver">
    <constructor-arg ref="dotnetToolResolver"/>
    <constructor-arg ref="simpleStateWorkflowComposer"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.logging.LoggerParametersImpl">
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.msbuild.MSBuildVSTestLoggerParametersProvider" id="msbuildVSTestLoggerParametersProvider">
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.SharedCompilationArgumentsProvider" id="sharedCompilationArgumentsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.msbuild.MSBuildLoggerArgumentsProvider" id="msBuildLoggerArgumentsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.vstest.VSTestLoggerArgumentsProvider" id="vstestLoggerArgumentsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.responseFile.ResponseFileArgumentsProvider" id="dotnetCommonResponseFileArgumentsProvider">
    <constructor-arg>
      <list>
        <ref bean="msBuildLoggerArgumentsProvider"/>
        <ref bean="sharedCompilationArgumentsProvider"/>
        <ref bean="msBuildArgumentsProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetCommonArgumentsProviderImpl" id="dotnetCommonArgumentsProvider" primary="true">
    <constructor-arg name="_useRspFile" value="true"/>
    <constructor-arg ref="dotnetCommonResponseFileArgumentsProvider"/>
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg>
      <list>
        <ref bean="msBuildArgumentsProvider"/>
        <ref bean="sharedCompilationArgumentsProvider"/>
        <ref bean="msBuildLoggerArgumentsProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.DotnetCommonArgumentsProviderImpl" id="dotnetAssembliesArgumentsProvider">
    <constructor-arg name="_useRspFile" value="false"/>
    <constructor-arg ref="dotnetCommonResponseFileArgumentsProvider"/>
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg>
      <list>
        <ref bean="vstestLoggerArgumentsProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.ResultsAnalyzerImpl" primary="true"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.TestsResultsAnalyzerImpl" id="testsResultsAnalyzer"/>
  <bean class="jetbrains.buildServer.dotnet.commands.BuildCommand" id="dotnetBuildCommand">
    <constructor-arg ref="testsResultsAnalyzer"/>
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
        <ref bean="vsTestLoggerEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.NugetDeleteCommand" id="dotnetNugetDeleteCommand">
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg ref="nugetResultsObserver"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.NugetPushCommand" id="dotnetNugetPushCommand">
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg ref="nugetResultsObserver"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.PackCommand" id="dotnetPackCommand">
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.PublishCommand" id="dotnetPublishCommand">
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.RestoreCommand" id="dotnetRestoreCommand"/>
  <bean class="jetbrains.buildServer.dotnet.commands.RunCommand" id="dotnetRunCommand">
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.commands.targeting.TargetTypeProviderImpl"/>
  <bean class="jetbrains.buildServer.dotnet.commands.TestCommand" id="dotnetTestCommand">
    <constructor-arg ref="dotnetCommonArgumentsProvider"/>
    <constructor-arg ref="dotnetAssembliesArgumentsProvider"/>
    <constructor-arg ref="testsResultsAnalyzer"/>
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.ListTestsCommand" id="dotnetListTestCommand">
    <constructor-arg ref="dotnetCommonArgumentsProvider"/>
    <constructor-arg ref="dotnetAssembliesArgumentsProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.CleanCommand" id="dotnetCleanCommand"/>
  <bean class="jetbrains.buildServer.dotnet.commands.CustomCommand" id="customCommand"/>
  <bean class="jetbrains.buildServer.dotnet.commands.custom.TeamCityDotnetTestSuppressorCommand" id="teamCityDotnetToolCommand">
    <constructor-arg ref="customCommand"/>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.byTestName.TestsListTempFileFactory" id="testsListTempFileFactory"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.byTestName.CSharpIdentifierValidator" id="cSharpTestNameValidator"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.byTestName.DotnetListTestsOutputValueProcessor" id="dotnetListTestsOutputValueProcessor"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.byTestName.TestsSplittingTestNamesManager" id="splitTestsNamesManager"/>
  <bean class="jetbrains.buildServer.dotnet.ParameterTestsFilterProvider" id="parameterTestsFilterProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.TestsSplittingFilterProvider" id="splitTestsFilterProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.TestsSplittingSettingsImpl" id="splitTestsFilterSettings"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.splitting.TestsSplittingModeProviderImpl" id="splitTestsModeProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.retry.TestRetrySettingsImpl" id="testRetrySettings"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.retry.TestRetryFilterProviderImpl" id="testRetryFilterProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.test.retry.TestRetryReportReader" id="testRetryReportReader"/>
  <bean class="jetbrains.buildServer.dotnet.ComposedTestsFilterProvider" primary="true" id="composedTestsFilterProvider">
    <constructor-arg>
      <list>
        <ref bean="parameterTestsFilterProvider"/>
        <ref bean="splitTestsFilterProvider"/>
      </list>
    </constructor-arg>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.commands.msbuild.MSBuildArgumentsProvider" id="msBuildArgumentsProvider">
    <constructor-arg>
      <list>
        <ref bean="msbuildVSTestLoggerParametersProvider"/>
        <ref bean="systemParametersProvider"/>
      </list>
    </constructor-arg>
  </bean>

  <!-- MSBuild command -->
  <bean class="jetbrains.buildServer.dotnet.commands.responseFile.ResponseFileArgumentsProvider" id="msbuildResponseFileArgumentsProvider">
    <constructor-arg>
      <list>
        <ref bean="msBuildLoggerArgumentsProvider"/>
        <ref bean="sharedCompilationArgumentsProvider"/>
        <ref bean="msBuildArgumentsProvider"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.dotnet.commands.MSBuildCommand" id="dotnetMSBuildCommand">
    <constructor-arg ref="testsResultsAnalyzer"/>
    <constructor-arg ref="msbuildResponseFileArgumentsProvider"/>
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg ref="msbuildToolResolver"/>
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
        <ref bean="vsTestLoggerEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>

  <bean class="jetbrains.buildServer.dotnet.commands.VSTestCommand" id="dotnetVSTestCommand">
    <constructor-arg ref="testsResultsAnalyzer"/>
    <constructor-arg ref="vstestLoggerArgumentsProvider"/>
    <constructor-arg ref="dotnetCustomArgumentsProvider"/>
    <constructor-arg ref="vstestToolResolver"/>
    <constructor-arg>
      <list>
        <ref bean="testCommandEnvironmentBuilder"/>
      </list>
    </constructor-arg>
  </bean>

  <!-- dotNet coverage -->
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageProcessorEventsSubscription"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageReportGeneratorsHolderImpl"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageProcessorReportPublisherImpl"/>
  <bean class="jetbrains.buildServer.dotcover.statistics.DotnetCoverageStatisticsPublisherImpl"/>
  <bean class="jetbrains.buildServer.dotcover.report.artifacts.ArtifactsUploaderImpl"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.utils.FileServiceImpl"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.utils.TempFactoryImpl"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.GenerateIndexPagePostProcessor"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.SequencerImpl"/>
  <bean class="jetbrains.buildServer.dotcover.report.artifacts.DotnetCoverageArtifactsPublisherImpl"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageReportsMerger"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageProcessor"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.DotnetCoverageDataProcessor"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.serviceMessage.DotnetCoverageParametersHolderImpl"/>
  <bean class="jetbrains.buildServer.dotnet.CoverageConstants$ServiceMessageSetup"/>

  <!-- dotCover reports -->
  <bean class="jetbrains.buildServer.dotnet.coverage.dotcover.DotCoverVersionFetcher"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.dotcover.DotCoverReportGenerator"/>
  <bean class="jetbrains.buildServer.dotcover.report.DotCoverTeamCityReportGenerator"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.dotcover.DotCoverParametersFactory"/>
  <bean class="jetbrains.buildServer.dotcover.report.DotCoverPropertiesExtension"/>
  <bean class="jetbrains.buildServer.dotcover.report.BundledDotCover"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.dotcover.DotCoverReportRunnerFactory"/>
  <bean class="jetbrains.buildServer.dotnet.coverage.dotcover.DotCoverVersionChecker"/>

  <!-- dotCover workflow composer -->
  <bean class="jetbrains.buildServer.dotcover.tool.DotCoverAgentTool"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverEntryPointSelectorImpl"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverWorkflowComposer" id="dotCoverWorkflowComposer"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverReportingWorkflowComposer" id="dotCoverReportingWorkflowComposer"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverProfiledProcessWorkflowComposer"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverProjectSerializerImpl"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverFilterConverterImpl"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverFilterProvider"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverEnvironmentVariables"/>
  <bean class="jetbrains.buildServer.dotcover.command.DotCoverCoverCommandLineBuilder"/>
  <bean class="jetbrains.buildServer.dotcover.command.DotCoverMergeCommandLineBuilder"/>
  <bean class="jetbrains.buildServer.dotcover.command.DotCoverReportCommandLineBuilder"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverModeDetector"/>
  <bean class="jetbrains.buildServer.dotcover.DotCoverSettings"/>

  <!-- Mono -->
  <bean class="jetbrains.buildServer.mono.MonoToolEnvironment" id="monoToolEnvironment"/>
  <bean class="jetbrains.buildServer.mono.MonoToolProvider" id="monoToolProvider">
    <constructor-arg ref="monoToolEnvironment"/>
  </bean>
  <bean class="jetbrains.buildServer.mono.MonoVersionParser" id="monoVersionParser"/>
  <bean class="jetbrains.buildServer.mono.MonoPropertiesExtension">
    <constructor-arg ref="monoToolProvider"/>
    <constructor-arg ref="monoVersionParser"/>
  </bean>

  <!-- cmd, bat -->
  <bean class="jetbrains.buildServer.cmd.CmdWorkflowComposer" id="cmdWorkflowComposer"/>

  <!-- sh -->
  <!--<bean class="jetbrains.buildServer.sh.ShWorkflowComposer" id="shWorkflowComposer"/>-->

  <!-- Visual Studio -->
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioWorkflowComposer" id="visualStudioWorkflowComposer"/>
  <bean class="jetbrains.buildServer.visualStudio.VisualStudioToolResolver"/>

  <!-- Custom dotnet command -->
  <bean class="jetbrains.buildServer.ExecutableWorkflowComposer" id="executableWorkflowComposer">
    <constructor-arg ref="dotnetStateWorkflowComposer"/>
    <constructor-arg ref="stdEnvironmentVariables"/>
  </bean>

  <bean class="jetbrains.buildServer.ProfilerHostWorkflowComposer" id="profilerHostWorkflowComposer">
    <constructor-arg ref="executableWorkflowComposer"/>
  </bean>

  <bean class="jetbrains.buildServer.custom.CustomCommandWorkflowComposer" id="customCommandWorkflowComposer"/>

  <!--Resharper inspections runner (Inspections + DupFinder) -->
  <bean class="jetbrains.buildServer.inspect.ArtifactServiceImpl"/>
  <bean class="jetbrains.buildServer.inspect.XmlReaderImpl"/>
  <bean class="jetbrains.buildServer.inspect.XmlWriterImpl"/>
  <bean class="jetbrains.buildServer.inspect.ToolStartInfoResolverImpl"/>
  <bean class="jetbrains.buildServer.inspect.ArgumentsProviderImpl">
    <constructor-arg ref="optionPluginsSpecificationProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectionVersionParser" id="inspectionVersionParser"/>

  <!--Resharper Inspections-->
  <bean class="jetbrains.buildServer.inspect.PluginDescriptorsProviderImpl"/>
  <bean class="jetbrains.buildServer.inspect.FolderPluginXmlElementGenerator"/>
  <bean class="jetbrains.buildServer.inspect.FilePluginXmlElementGenerator"/>
  <bean class="jetbrains.buildServer.inspect.DownloadPluginXmlElementGenerator"/>
  <bean class="jetbrains.buildServer.inspect.XmlPluginsSpecificationProvider" name="xmlPluginsSpecificationProvider"/>
  <bean class="jetbrains.buildServer.inspect.IdPluginsSpecificationProvider" name="optionPluginsSpecificationProvider"/>
  <bean class="jetbrains.buildServer.inspect.InspectCodeEnvironmentProvider" id="inspectCodeEnvironmentProvider">
    <constructor-arg ref="xmlPluginsSpecificationProvider"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectionConfigurationFile" id="inspectionConfigurationFile"/>
  <bean class="jetbrains.buildServer.inspect.InspectionOutputObserver" id="inspectionOutputObserver"/>
  <bean class="jetbrains.buildServer.inspect.InspectCodeDataProcessor" id="inspectCodeDataProcessor"/>
  <bean class="jetbrains.buildServer.inspect.InspectionToolStateWorkflowComposerImpl" id="inspectionsInspectionToolStateWorkflowComposer">
    <constructor-arg type="jetbrains.buildServer.inspect.InspectionTool" value="Inspectcode"/>
    <constructor-arg ref="inspectionVersionParser"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectionWorkflowComposer" id="inspectionWorkflowComposer">
    <constructor-arg type="jetbrains.buildServer.inspect.InspectionTool" value="Inspectcode"/>
    <constructor-arg ref="inspectCodeEnvironmentProvider"/>
    <constructor-arg ref="inspectionOutputObserver"/>
    <constructor-arg ref="inspectionConfigurationFile"/>
    <constructor-arg ref="inspectionsInspectionToolStateWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="inspections">
    <constructor-arg value="dotnet-tools-inspectcode"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectCacheCleaner" id="inspectCacheCleanerLight">
    <constructor-arg name="name" value="Inspection per checkout"/>
    <constructor-arg name="type" type="jetbrains.buildServer.agent.runner.CleanType" value="Light"/>
    <constructor-arg name="_runnerType" value="dotnet-tools-inspectcode"/>
    <constructor-arg name="_pathType" type="jetbrains.buildServer.agent.runner.PathType" value="CachePerCheckout"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectCacheCleaner" id="inspectCacheCleanerDeep">
    <constructor-arg name="name" value="Inspection global"/>
    <constructor-arg name="type" type="jetbrains.buildServer.agent.runner.CleanType" value="Deep"/>
    <constructor-arg name="_runnerType" value="dotnet-tools-inspectcode"/>
    <constructor-arg name="_pathType" type="jetbrains.buildServer.agent.runner.PathType" value="Cache"/>
  </bean>

  <!--Resharper DupFinder-->
  <bean class="jetbrains.buildServer.inspect.DupFinderConfigurationFile" id="dupFinderConfigurationFile"/>
  <bean class="jetbrains.buildServer.inspect.DupFinderEnvironmentProvider" id="dupFinderEnvironmentProvider"/>
  <bean class="jetbrains.buildServer.inspect.DupFinderOutputObserver" id="dupFinderOutputObserver"/>
  <bean class="jetbrains.buildServer.inspect.DupFinderCodeDataProcessor" id="dupFinderCodeDataProcessor"/>
  <bean class="jetbrains.buildServer.inspect.InspectionToolStateWorkflowComposerImpl" id="dupfinderInspectionToolStateWorkflowComposer">
    <constructor-arg type="jetbrains.buildServer.inspect.InspectionTool" value="Dupfinder"/>
    <constructor-arg ref="inspectionVersionParser"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectionWorkflowComposer" id="dupfinderWorkflowComposer">
    <constructor-arg type="jetbrains.buildServer.inspect.InspectionTool" value="Dupfinder"/>
    <constructor-arg ref="dupFinderEnvironmentProvider"/>
    <constructor-arg ref="dupFinderOutputObserver"/>
    <constructor-arg ref="dupFinderConfigurationFile"/>
    <constructor-arg ref="dupfinderInspectionToolStateWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="dupfinder">
    <constructor-arg value="dotnet-tools-dupfinder"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectCacheCleaner" id="dupFinderCacheCleanerLight">
    <constructor-arg name="name" value="dupFinder per checkout"/>
    <constructor-arg name="type" type="jetbrains.buildServer.agent.runner.CleanType" value="Light"/>
    <constructor-arg name="_runnerType" value="dotnet-tools-dupfinder"/>
    <constructor-arg name="_pathType" type="jetbrains.buildServer.agent.runner.PathType" value="CachePerCheckout"/>
  </bean>
  <bean class="jetbrains.buildServer.inspect.InspectCacheCleaner" id="dupFinderCacheCleanerDeep">
    <constructor-arg name="name" value="dupFinder global"/>
    <constructor-arg name="type" type="jetbrains.buildServer.agent.runner.CleanType" value="Deep"/>
    <constructor-arg name="_runnerType" value="dotnet-tools-dupfinder"/>
    <constructor-arg name="_pathType" type="jetbrains.buildServer.agent.runner.PathType" value="Cache"/>
  </bean>

  <!--C# script-->
  <bean class="jetbrains.buildServer.script.CSharpScriptWorkflowComposer" id="cSharpScriptWorkflowComposer"/>
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="csharpScript">
    <constructor-arg value="csharpScript"/>
  </bean>
  <bean class="jetbrains.buildServer.script.CommandLineFactoryImpl">
    <constructor-arg>
      <list>
        <ref bean="nugetEnvironmentVariables"/>
      </list>
    </constructor-arg>
  </bean>
  <bean class="jetbrains.buildServer.script.ScriptResolverImpl"/>
  <bean class="jetbrains.buildServer.script.ToolResolverImpl"/>
  <bean class="jetbrains.buildServer.script.ToolVersionResolverImpl"/>
  <bean class="jetbrains.buildServer.script.RspContentFactoryImpl"/>

  <!--NUnit composers-->
  <bean class="jetbrains.buildServer.agent.runner.WorkflowBuildServiceFactory" id="nunit">
    <constructor-arg value="nunit-console"/>
  </bean>
  <bean class="jetbrains.buildServer.nunit.NUnitWorkflowComposer"/>
  <bean class="jetbrains.buildServer.nunit.NUnitViaCommandLineWorkflowComposer"/>
  <bean class="jetbrains.buildServer.nunit.NUnitViaProjectFileWorkflowComposer" id="nUnitViaProjectFileComposer"/>
  <bean class="jetbrains.buildServer.nunit.NUnitReorderingWorkflowComposer">
    <constructor-arg ref="nUnitViaProjectFileComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.nunit.NUnitToolStateWorkflowComposer"/>
  <bean class="jetbrains.buildServer.nunit.MonoExecutableWorkflowComposer">
    <constructor-arg ref="simpleStateWorkflowComposer"/>
  </bean>
  <bean class="jetbrains.buildServer.nunit.NUnitSettingsImpl"/>

  <!--NUnit tool state -->
  <bean class="jetbrains.buildServer.nunit.toolState.NUnitToolStateVerifier"/>
  <bean class="jetbrains.buildServer.nunit.toolState.NUnitToolStateParser"/>

  <!--NUnit arguments -->
  <bean class="jetbrains.buildServer.nunit.arguments.NUnitConsoleRunnerPathProvider"/>
  <bean class="jetbrains.buildServer.nunit.arguments.NUnitTestFilterProvider"/>
  <bean class="jetbrains.buildServer.nunit.arguments.NUnitArgumentsProvider"/>
  <bean class="jetbrains.buildServer.nunit.arguments.NUnitTestingAssembliesProvider"/>

  <!--NUnit XML project -->
  <bean class="jetbrains.buildServer.nunit.nUnitProject.NUnitProjectGenerator"/>
  <bean class="jetbrains.buildServer.nunit.nUnitProject.NUnitProjectSerializer"/>

  <!--NUnit test reordering -->
  <bean class="jetbrains.buildServer.nunit.testReordering.RunnerConfigVarTestInfoParser"/>
  <bean class="jetbrains.buildServer.nunit.testReordering.NUnitXmlTestInfoParser"/>
  <bean class="jetbrains.buildServer.nunit.testReordering.NUnitReorderingTestsSplitService"/>

  <!--Dependency Cache -->
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheWorkflowSessionEventListener"/>
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheBuildStepContextHolder"/>
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheManager"/>
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheSettingsProvider"/>
  <bean class="jetbrains.buildServer.dotnet.commands.NugetLocalsCommand" id="dotnetNugetLocalsCommand"/>
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheCoroutineScope" id="dotnetDepCacheCoroutineScope"/>
  <bean class="jetbrains.buildServer.depcache.DotnetDepCacheInvalidationDataCollector"/>
  <bean class="jetbrains.buildServer.dotnet.commands.transformation.DotnetDepCacheRestorationCommandTransformer" id="dotnetDepCacheRestorationCommandTransformer">
    <constructor-arg ref="restorePackagesPathArgumentsProvider"/>
  </bean>
  <bean name="dotnetCacheDirectoryAllowedListAdder" class="jetbrains.buildServer.depcache.DotnetCacheDirectoryAllowedListAdder" init-method="register" destroy-method="unregister"/>
</beans>